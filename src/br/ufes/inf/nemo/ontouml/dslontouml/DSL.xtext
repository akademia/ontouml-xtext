// automatically generated by Xtext
grammar br.ufes.inf.nemo.ontouml.dslontouml.DSL with org.eclipse.xtext.common.Terminals 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
//simport "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore"
import "platform:/resource/br.ufes.inf.nemo.ontouml.refontouml/model/RefOntoUML.ecore" 

Model returns Model:
	{Model}
	'Model'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('viewpoint' viewpoint=String0)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('packageMerge' '{' packageMerge+=PackageMerge ( "," packageMerge+=PackageMerge)* '}' )?
		('packagedElement' '{' packagedElement+=PackageableElement ( "," packagedElement+=PackageableElement)* '}' )?
    '}';


PackageableElement returns PackageableElement:
	Package_Impl | Dependency | Constraintx | Association_Impl | GeneralizationSet | OpaqueExpression | Class_Impl | Model | DataType_Impl | StringExpression | Expression_Impl | Enumeration | EnumerationLiteral | InstanceSpecification_Impl | PrimitiveType | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;

Element returns Element:
	Comment | Package_Impl | Dependency | ElementImport | PackageImport | Constraintx | Association_Impl | Generalization | GeneralizationSet | OpaqueExpression | Property | Class_Impl | Model | DataType_Impl | StringExpression | Expression_Impl | PackageMerge | Enumeration | EnumerationLiteral | InstanceSpecification_Impl | Slot | PrimitiveType | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;

NamedElement returns NamedElement:
	Package_Impl | Dependency | Constraintx | Association_Impl | GeneralizationSet | OpaqueExpression | Property | Class_Impl | Model | DataType_Impl | StringExpression | Expression_Impl | Enumeration | EnumerationLiteral | InstanceSpecification_Impl | PrimitiveType | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;

Type returns Type:
	Association_Impl | Class_Impl | DataType_Impl | Enumeration | PrimitiveType | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;

ValueSpecification returns ValueSpecification:
	OpaqueExpression | StringExpression | Expression_Impl | LiteralInteger | LiteralString | LiteralBoolean | LiteralNull | InstanceValue | LiteralUnlimitedNatural;

Package returns Package:
	Package_Impl | Model;

Classifier returns Classifier:
	Association_Impl | Class_Impl | DataType_Impl | Enumeration | PrimitiveType | SubKind | Kind | Quantity | Collective | Phase | Role | Category | RoleMixin | Mixin | Mode | Relator | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;

Association returns Association:
	Association_Impl | subQuantityOf | subCollectionOf | memberOf | componentOf | Characterization | Mediation | Derivation | FormalAssociation | MaterialAssociation;

StructuralFeature returns StructuralFeature:
	Property;

InstanceSpecification returns InstanceSpecification:
	InstanceSpecification_Impl | EnumerationLiteral;

EAnnotation returns ecore::EAnnotation:
	{ecore::EAnnotation}
	'EAnnotation'
	'{'
		('source' source=EString)?
		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('details' '{' details+=EStringToStringMapEntry ( "," details+=EStringToStringMapEntry)* '}' )?
		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
    '}';

Comment returns Comment:
	{Comment}
	'Comment'
	'{'
		('body' body=String0)?
		('annotatedElement' '(' annotatedElement+=[Element|EString] ( "," annotatedElement+=[Element|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
    '}';

String0 returns String:
	'String' /* TODO: implement this rule and an appropriate IValueConverter */;

enum VisibilityKind returns VisibilityKind:
	public = 'public' | private = 'private' | protected = 'protected' | package = 'package';

Dependency returns Dependency:
	'Dependency'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		'supplier' '(' supplier+=[NamedElement|EString] ( "," supplier+=[NamedElement|EString])* ')' 
		'client' '(' client+=[NamedElement|EString] ( "," client+=[NamedElement|EString])* ')' 
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

StringExpression returns StringExpression:
	{StringExpression}
	'StringExpression'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('symbol' symbol=String0)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('operand' '{' operand+=ValueSpecification ( "," operand+=ValueSpecification)* '}' )?
		('subExpression' '{' subExpression+=StringExpression ( "," subExpression+=StringExpression)* '}' )?
    '}';

ElementImport returns ElementImport:
	'ElementImport'
	'{'
		'visibility' visibility=VisibilityKind
		('alias' alias=String0)?
		'importedElement' importedElement=[PackageableElement|EString]
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
    '}';

PackageImport returns PackageImport:
	'PackageImport'
	'{'
		'visibility' visibility=VisibilityKind
		'importedPackage' importedPackage=[Package|EString]
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
    '}';

Constraintx returns Constraintx:
	'Constraintx'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('constrainedElement' '(' constrainedElement+=[Element|EString] ( "," constrainedElement+=[Element|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		'specification' specification=ValueSpecification
    '}';

PackageMerge returns PackageMerge:
	'PackageMerge'
	'{'
		'mergedPackage' mergedPackage=[Package|EString]
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
    '}';

EString returns ecore::EString:
	STRING | ID;

EStringToStringMapEntry returns ecore::EStringToStringMapEntry:
	{ecore::EStringToStringMapEntry}
	'EStringToStringMapEntry'
	'{'
		('key' key=EString)?
		('value' value=EString)?
    '}';

EObject returns ecore::EObject:
	{ecore::EObject}
	'EObject'
;

Package_Impl returns Package:
	{Package}
	'Package'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('packageMerge' '{' packageMerge+=PackageMerge ( "," packageMerge+=PackageMerge)* '}' )?
		('packagedElement' '{' packagedElement+=PackageableElement ( "," packagedElement+=PackageableElement)* '}' )?
    '}';

Association_Impl returns Association:
	'Association'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

Generalization returns Generalization:
	'Generalization'
	'{'
		('isSubstitutable' isSubstitutable=Boolean)?
		'general' general=[Classifier|EString]
		('generalizationSet' '(' generalizationSet+=[GeneralizationSet|EString] ( "," generalizationSet+=[GeneralizationSet|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
    '}';

GeneralizationSet returns GeneralizationSet:
	'GeneralizationSet'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isCovering' isCovering=Boolean
		'isDisjoint' isDisjoint=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertype' powertype=[Classifier|EString])?
		('generalization' '(' generalization+=[Generalization|EString] ( "," generalization+=[Generalization|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

OpaqueExpression returns OpaqueExpression:
	{OpaqueExpression}
	'OpaqueExpression'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('body' '{' body+=String0 ( "," body+=String0)* '}' )?
		('language' '{' language+=String0 ( "," language+=String0)* '}' )?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

Property returns Property:
	'Property'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isStatic' isStatic=Boolean
		'isOrdered' isOrdered=Boolean
		'isUnique' isUnique=Boolean
		'isReadOnly' isReadOnly=Boolean
		'isDerived' isDerived=Boolean
		'isDerivedUnion' isDerivedUnion=Boolean
		'aggregation' aggregation=AggregationKind
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		('redefinedProperty' '(' redefinedProperty+=[Property|EString] ( "," redefinedProperty+=[Property|EString])* ')' )?
		('subsettedProperty' '(' subsettedProperty+=[Property|EString] ( "," subsettedProperty+=[Property|EString])* ')' )?
		('association' association=[Association|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('upperValue' upperValue=ValueSpecification)?
		('lowerValue' lowerValue=ValueSpecification)?
		('defaultValue' defaultValue=ValueSpecification)?
    '}';

Class_Impl returns Class:
	'Class'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

DataType_Impl returns DataType:
	'DataType'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Expression_Impl returns Expression:
	{Expression}
	'Expression'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('symbol' symbol=String0)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('operand' '{' operand+=ValueSpecification ( "," operand+=ValueSpecification)* '}' )?
    '}';

Enumeration returns Enumeration:
	'Enumeration'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
		('ownedLiteral' '{' ownedLiteral+=EnumerationLiteral ( "," ownedLiteral+=EnumerationLiteral)* '}' )?
    '}';

EnumerationLiteral returns EnumerationLiteral:
	{EnumerationLiteral}
	'EnumerationLiteral'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('classifier' '(' classifier+=[Classifier|EString] ( "," classifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('slot' '{' slot+=Slot ( "," slot+=Slot)* '}' )?
		('specification' specification=ValueSpecification)?
    '}';

InstanceSpecification_Impl returns InstanceSpecification:
	{InstanceSpecification}
	'InstanceSpecification'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('classifier' '(' classifier+=[Classifier|EString] ( "," classifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('slot' '{' slot+=Slot ( "," slot+=Slot)* '}' )?
		('specification' specification=ValueSpecification)?
    '}';

Slot returns Slot:
	'Slot'
	'{'
		'definingFeature' definingFeature=[StructuralFeature|EString]
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('value' '{' value+=ValueSpecification ( "," value+=ValueSpecification)* '}' )?
    '}';

PrimitiveType returns PrimitiveType:
	'PrimitiveType'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

LiteralInteger returns LiteralInteger:
	'LiteralInteger'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'value' value=Integer
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

LiteralString returns LiteralString:
	{LiteralString}
	'LiteralString'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('value' value=String0)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

LiteralBoolean returns LiteralBoolean:
	'LiteralBoolean'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'value' value=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

LiteralNull returns LiteralNull:
	{LiteralNull}
	'LiteralNull'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

InstanceValue returns InstanceValue:
	'InstanceValue'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		'instance' instance=[InstanceSpecification|EString]
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

LiteralUnlimitedNatural returns LiteralUnlimitedNatural:
	'LiteralUnlimitedNatural'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'value' value=UnlimitedNatural
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('type' type=[Type|EString])?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
    '}';

SubKind returns SubKind:
	'SubKind'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Kind returns Kind:
	'Kind'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Quantity returns Quantity:
	'Quantity'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Collective returns Collective:
	isExtensional?='isExtensional'
	'Collective'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Phase returns Phase:
	'Phase'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Role returns Role:
	'Role'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Category returns Category:
	'Category'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

RoleMixin returns RoleMixin:
	'RoleMixin'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Mixin returns Mixin:
	'Mixin'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Mode returns Mode:
	'Mode'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

Relator returns Relator:
	'Relator'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isActive' isActive=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('nestedClassifier' '{' nestedClassifier+=Classifier ( "," nestedClassifier+=Classifier)* '}' )?
		('ownedAttribute' '{' ownedAttribute+=Property ( "," ownedAttribute+=Property)* '}' )?
    '}';

subQuantityOf returns subQuantityOf:
	isEssential?='isEssential'
	isInseparable?='isInseparable'
	isImmutable?='isImmutable'
	'subQuantityOf'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		'isShareable' isShareable=EBoolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

subCollectionOf returns subCollectionOf:
	isEssential?='isEssential'
	isInseparable?='isInseparable'
	isImmutable?='isImmutable'
	'subCollectionOf'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		'isShareable' isShareable=EBoolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

memberOf returns memberOf:
	isEssential?='isEssential'
	isInseparable?='isInseparable'
	isImmutable?='isImmutable'
	'memberOf'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		'isShareable' isShareable=EBoolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

componentOf returns componentOf:
	isEssential?='isEssential'
	isInseparable?='isInseparable'
	isImmutable?='isImmutable'
	'componentOf'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		'isShareable' isShareable=EBoolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

Characterization returns Characterization:
	'Characterization'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

Mediation returns Mediation:
	'Mediation'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

Derivation returns Derivation:
	'Derivation'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

FormalAssociation returns FormalAssociation:
	'FormalAssociation'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

MaterialAssociation returns MaterialAssociation:
	'MaterialAssociation'
	'{'
		('name' name=String0)?
		('visibility' visibility=VisibilityKind)?
		'isLeaf' isLeaf=Boolean
		'isAbstract' isAbstract=Boolean
		'isDerived' isDerived=Boolean
		('clientDependency' '(' clientDependency+=[Dependency|EString] ( "," clientDependency+=[Dependency|EString])* ')' )?
		('powertypeExtent' '(' powertypeExtent+=[GeneralizationSet|EString] ( "," powertypeExtent+=[GeneralizationSet|EString])* ')' )?
		('redefinedClassifier' '(' redefinedClassifier+=[Classifier|EString] ( "," redefinedClassifier+=[Classifier|EString])* ')' )?
		'memberEnd' '(' memberEnd+=[Property|EString] ( "," memberEnd+=[Property|EString])* ')' 
		('navigableOwnedEnd' '(' navigableOwnedEnd+=[Property|EString] ( "," navigableOwnedEnd+=[Property|EString])* ')' )?
		//('eAnnotations' '{' eAnnotations+=EAnnotation ( "," eAnnotations+=EAnnotation)* '}' )?
		('ownedComment' '{' ownedComment+=Comment ( "," ownedComment+=Comment)* '}' )?
		('nameExpression' nameExpression=StringExpression)?
		('elementImport' '{' elementImport+=ElementImport ( "," elementImport+=ElementImport)* '}' )?
		('packageImport' '{' packageImport+=PackageImport ( "," packageImport+=PackageImport)* '}' )?
		('ownedRule' '{' ownedRule+=Constraintx ( "," ownedRule+=Constraintx)* '}' )?
		('generalization' '{' generalization+=Generalization ( "," generalization+=Generalization)* '}' )?
		('ownedEnd' '{' ownedEnd+=Property ( "," ownedEnd+=Property)* '}' )?
    '}';

Boolean returns Boolean:
	'Boolean' /* TODO: implement this rule and an appropriate IValueConverter */;

enum AggregationKind returns AggregationKind:
	none = 'none' | shared = 'shared' | composite = 'composite';

Integer returns Integer:
	'Integer' /* TODO: implement this rule and an appropriate IValueConverter */;

UnlimitedNatural returns UnlimitedNatural:
	'UnlimitedNatural' /* TODO: implement this rule and an appropriate IValueConverter */;

EBoolean returns ecore::EBoolean:
	'true' | 'false';
